【对象行为模式】
一个对象的行为改变可能也会影响其他对象的行为改变

定义：多个对象间存在一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。
        这种模式有时又称作《发布-订阅模式》、《模型-视图模式》

注意：具体目标对象和具体观察者对象之间不能直接调用，否则加大耦合度

架构：抽象主题、具体主题、抽象观察者、具体观察者
    ·抽象主题（Subject）角色：也叫抽象目标类，它提供了一个用于保存观察者对象的聚集类和增加、删除观察者对象的方法，以及通知所有观察者的抽象方法。
    ·具体主题（Concrete Subject）角色：也叫具体目标类，它实现抽象目标中的通知方法，当具体主题的内部状态发生改变时，通知所有注册过的观察者对象。
    ·抽象观察者（Observer）角色：它是一个抽象类或接口，它包含了一个更新自己的抽象方法，当接到具体主题的更改通知时被调用。
    ·具体观察者（Concrete Observer）角色：实现抽象观察者中定义的抽象方法，以便在得到目标的更改通知时更新自身的状态。

发消息和接消息===>公众号和粉丝  {抽象公众号、具体公众号、抽象粉丝、具体粉丝}

应用场景：
     ·对象间存在一对多关系，一个对象的状态发生改变会影响其他对象。
     ·当一个抽象模型有两个方面，其中一个方面依赖于另一方面时，可将这二者封装在独立的对象中以使它们可以各自独立地改变和复用。
     ·实现类似广播机制的功能，不需要知道具体收听者，只需分发广播，系统中感兴趣的对象会自动接收该广播。
     ·多层级嵌套使用，形成一种链式触发机制，使得事件具备跨域（跨越两种观察者类型）通知



