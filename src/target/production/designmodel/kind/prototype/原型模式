创建实例需要时间和资源
如果需要多个实例，使用原型模式==创建一个实例，通过复制来得到相同或相似的实例

java自带的原型模式基于内存二进制流的复制，比new一个对象的性能更好

可以使用深克隆方式保存对象的状态，使用原型模式将对象复制一份，并将其状态保存起来，
简化了创建对象的过程，以便在需要的时候使用（例如恢复到历史某一状态），可辅助实现撤销操作。

浅拷贝（克隆）：只复制A，，仍指向原有属性所指向的对象的内存地址。
深拷贝（克隆）：复制A和A所引用的，，不再指向原有对象地址。

需要为每一个类都定义一个clone方法

一个类重写了clone方法 在进行调用的时候会分配一个新的地址，如果该类引用了其它类的对象，那么所引用的对象的类也要重写clone方法才能实现深克隆

例子：A引用了B的对象，，在克隆A的时候如果B没有重写clone方法那么A的地址改变B的不改变（浅克隆）
                    在克隆A的时候如果B重写了clone方法那么A和B的地址都改变（深克隆）


    可以扩展为带原型管理器的原型模式，用map存储多个原型，，要使用的时候获取到原型进行克隆