职责链模式
【对象行为模式】

本质：解耦请求和处理；让请求在处理链中能进行传递和被处理
     理解责任链模式应当理解其模式，而不是其具体实现。责任链模式的独到之处是将其节点处理者组合成了链式结构，
     并允许节点自身决定是否进行请求处理或转发，相当于让请求流动起来。

定义：为了避免请求发送者与多个请求处理者耦合在一起，于是将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链；
        当有请求发生时，可将请求沿着这条链传递，直到有对象处理它为止。（请求在一条链路中传递，被链路中某个环节处理）

架构：通常情况下，可以通过数据链表来实现职责链模式的数据结构。
     抽象处理者、具体处理者、客户类
     ·抽象处理者（Handler）角色：定义一个处理请求的接口，包含抽象处理方法和一个后继连接。
     ·具体处理者（Concrete Handler）角色：实现抽象处理者的处理方法，判断能否处理本次请求，如果可以处理请求则处理，否则将该请求转给它的后继者。
     ·客户类（Client）角色：创建处理链，并向链头的具体处理者对象提交请求，它不关心处理细节和请求的传递过程。


应用场景：
    多个对象可以处理一个请求，但具体由哪个对象处理该请求在运行时自动确定。
    可动态指定一组对象处理请求，或添加新的处理者。
    需要在不明确指定请求处理者的情况下，向多个处理者中的一个提交请求。

    组装一条处理请求的链路，将请求从链头开始向下处理，由程序决定哪个环节处理请求
    可能出现请求不会被处理的情况，和循环处理的情况
